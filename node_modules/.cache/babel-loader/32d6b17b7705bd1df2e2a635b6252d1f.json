{"ast":null,"code":"import React,{useEffect}from'react';import{Control,Column}from'./ControlGridStlyes';import{useAppDispatch,useAppSelector}from'../../../store/hooks';import{makeMove,selectCurrentPlayer,selectGameMode,selectIsTimeForNextTurn,setPointercolumn}from'../../../store/gameSlice';import{aiMove}from'../../../store/aiMove';import GamePointer from'../../UI/pointer/Pointer';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var columns=Array(7).fill(null);var ControlGrid=function ControlGrid(){var isTimeForNextTurn=useAppSelector(selectIsTimeForNextTurn);var gameMode=useAppSelector(selectGameMode);var currentPlayer=useAppSelector(selectCurrentPlayer);var dispatch=useAppDispatch();// CPU move monitoring\nuseEffect(function(){if(currentPlayer==='p2'&&gameMode==='CPUvP'&&isTimeForNextTurn){dispatch(aiMove());}},[dispatch,isTimeForNextTurn,currentPlayer,gameMode]);// Moving pointer\nvar mouseHoverHandler=function mouseHoverHandler(e){dispatch(setPointercolumn(e.currentTarget.getAttribute('data-columnnum')||'0'));};// Player move handler\nvar columnClickHandler=function columnClickHandler(e){e.stopPropagation();if(currentPlayer==='p2'&&gameMode==='CPUvP')return;var col=e.currentTarget.getAttribute('data-columnnum');if(col){dispatch(makeMove(+col));}};return/*#__PURE__*/_jsxs(Control,{\"data-testid\":\"control\",children:[/*#__PURE__*/_jsx(GamePointer,{}),columns.map(function(_,ind){return/*#__PURE__*/_jsx(Column,{\"data-columnnum\":ind,onMouseEnter:mouseHoverHandler,onClick:columnClickHandler,\"data-testid\":\"column\".concat(ind)},ind);})]});};export default ControlGrid;","map":{"version":3,"names":["React","useEffect","Control","Column","useAppDispatch","useAppSelector","makeMove","selectCurrentPlayer","selectGameMode","selectIsTimeForNextTurn","setPointercolumn","aiMove","GamePointer","columns","Array","fill","ControlGrid","isTimeForNextTurn","gameMode","currentPlayer","dispatch","mouseHoverHandler","e","currentTarget","getAttribute","columnClickHandler","stopPropagation","col","map","_","ind"],"sources":["C:/wamp64/www/gamereact11/src/components/game/controlGrid/ControlGrid.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\n\nimport { Control, Column } from './ControlGridStlyes';\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks';\nimport {\n  makeMove,\n  selectCurrentPlayer,\n  selectGameMode,\n  selectIsTimeForNextTurn,\n  setPointercolumn,\n} from '../../../store/gameSlice';\n\nimport { aiMove } from '../../../store/aiMove';\nimport GamePointer from '../../UI/pointer/Pointer';\n\nconst columns = Array(7).fill(null);\n\nconst ControlGrid: React.FC = () => {\n  const isTimeForNextTurn = useAppSelector(selectIsTimeForNextTurn);\n  const gameMode = useAppSelector(selectGameMode);\n  const currentPlayer = useAppSelector(selectCurrentPlayer);\n\n  const dispatch = useAppDispatch();\n  // CPU move monitoring\n  useEffect(() => {\n    if (currentPlayer === 'p2' && gameMode === 'CPUvP' && isTimeForNextTurn) {\n      dispatch(aiMove());\n    }\n  }, [dispatch, isTimeForNextTurn, currentPlayer, gameMode]);\n\n  // Moving pointer\n  const mouseHoverHandler = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    dispatch(\n      setPointercolumn(e.currentTarget.getAttribute('data-columnnum') || '0')\n    );\n  };\n\n  // Player move handler\n  const columnClickHandler = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    e.stopPropagation();\n    if (currentPlayer === 'p2' && gameMode === 'CPUvP') return;\n    const col = e.currentTarget.getAttribute('data-columnnum');\n    if (col) {\n      dispatch(makeMove(+col));\n    }\n  };\n\n  return (\n    <Control data-testid=\"control\">\n      <GamePointer />\n      {columns.map((_, ind) => {\n        return (\n          <Column\n            key={ind}\n            data-columnnum={ind}\n            onMouseEnter={mouseHoverHandler}\n            onClick={columnClickHandler}\n            data-testid={`column${ind}`}\n          />\n        );\n      })}\n    </Control>\n  );\n};\n\nexport default ControlGrid;\n"],"mappings":"AAAA,MAAOA,MAAK,EAAIC,SAAS,KAAQ,OAAO,CAExC,OAASC,OAAO,CAAEC,MAAM,KAAQ,qBAAqB,CACrD,OAASC,cAAc,CAAEC,cAAc,KAAQ,sBAAsB,CACrE,OACEC,QAAQ,CACRC,mBAAmB,CACnBC,cAAc,CACdC,uBAAuB,CACvBC,gBAAgB,KACX,0BAA0B,CAEjC,OAASC,MAAM,KAAQ,uBAAuB,CAC9C,MAAOC,YAAW,KAAM,0BAA0B,CAAC,wFAEnD,GAAMC,QAAO,CAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAEnC,GAAMC,YAAqB,CAAG,QAAxBA,YAAqB,EAAS,CAClC,GAAMC,kBAAiB,CAAGZ,cAAc,CAACI,uBAAuB,CAAC,CACjE,GAAMS,SAAQ,CAAGb,cAAc,CAACG,cAAc,CAAC,CAC/C,GAAMW,cAAa,CAAGd,cAAc,CAACE,mBAAmB,CAAC,CAEzD,GAAMa,SAAQ,CAAGhB,cAAc,EAAE,CACjC;AACAH,SAAS,CAAC,UAAM,CACd,GAAIkB,aAAa,GAAK,IAAI,EAAID,QAAQ,GAAK,OAAO,EAAID,iBAAiB,CAAE,CACvEG,QAAQ,CAACT,MAAM,EAAE,CAAC,CACpB,CACF,CAAC,CAAE,CAACS,QAAQ,CAAEH,iBAAiB,CAAEE,aAAa,CAAED,QAAQ,CAAC,CAAC,CAE1D;AACA,GAAMG,kBAAiB,CAAG,QAApBA,kBAAiB,CACrBC,CAA+C,CAC5C,CACHF,QAAQ,CACNV,gBAAgB,CAACY,CAAC,CAACC,aAAa,CAACC,YAAY,CAAC,gBAAgB,CAAC,EAAI,GAAG,CAAC,CACxE,CACH,CAAC,CAED;AACA,GAAMC,mBAAkB,CAAG,QAArBA,mBAAkB,CACtBH,CAA+C,CAC5C,CACHA,CAAC,CAACI,eAAe,EAAE,CACnB,GAAIP,aAAa,GAAK,IAAI,EAAID,QAAQ,GAAK,OAAO,CAAE,OACpD,GAAMS,IAAG,CAAGL,CAAC,CAACC,aAAa,CAACC,YAAY,CAAC,gBAAgB,CAAC,CAC1D,GAAIG,GAAG,CAAE,CACPP,QAAQ,CAACd,QAAQ,CAAC,CAACqB,GAAG,CAAC,CAAC,CAC1B,CACF,CAAC,CAED,mBACE,MAAC,OAAO,EAAC,cAAY,SAAS,wBAC5B,KAAC,WAAW,IAAG,CACdd,OAAO,CAACe,GAAG,CAAC,SAACC,CAAC,CAAEC,GAAG,CAAK,CACvB,mBACE,KAAC,MAAM,EAEL,iBAAgBA,GAAI,CACpB,YAAY,CAAET,iBAAkB,CAChC,OAAO,CAAEI,kBAAmB,CAC5B,8BAAsBK,GAAG,CAAG,EAJvBA,GAAG,CAKR,CAEN,CAAC,CAAC,GACM,CAEd,CAAC,CAED,cAAed,YAAW"},"metadata":{},"sourceType":"module"}