{"ast":null,"code":"import React from'react';import{PlayerInfoWrapper,PlayerName,Score}from'./PlayerInfoStyles';import{ReactComponent as YouIcon}from'../../../assets/images/you.svg';import{ReactComponent as CPUIcon}from'../../../assets/images/cpu.svg';import{ReactComponent as Player1}from'../../../assets/images/player-one.svg';import{ReactComponent as Player2}from'../../../assets/images/player-two.svg';import{playerInfoLeftVariants,playerInfoRigthVariants}from'../../../frameMotinVariats/frameMotionVariants';import{useAppSelector}from'../../../store/hooks';import{selectGameMode,selectPlayer1,selectPlayer2}from'../../../store/gameSlice';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var iconsPVP={player1:Player1,player2:Player2};var iconsPVCPU={player1:YouIcon,player2:CPUIcon};var PlayerInfo=function PlayerInfo(_ref){var player=_ref.player;var gameMode=useAppSelector(selectGameMode);var p1=useAppSelector(selectPlayer1);var p2=useAppSelector(selectPlayer2);// render needed svg base on player name and game mode\nvar PalyerIcon=gameMode==='PvP'?iconsPVP[player]:iconsPVCPU[player];return/*#__PURE__*/_jsxs(PlayerInfoWrapper,{player:player// @ts-ignore\n,variants:player==='player1'?playerInfoLeftVariants:playerInfoRigthVariants,initial:\"hidden\",animate:\"visible\",exit:\"exit\",children:[/*#__PURE__*/_jsx(PlayerName,{children:player==='player1'?p1.name:p2.name}),/*#__PURE__*/_jsx(Score,{\"data-testid\":\"\".concat(player,\"-score\"),children:player==='player1'?p1.score:p2.score}),/*#__PURE__*/_jsx(PalyerIcon,{\"data-testid\":\"icon\"})]});};export default PlayerInfo;","map":{"version":3,"names":["React","PlayerInfoWrapper","PlayerName","Score","ReactComponent","YouIcon","CPUIcon","Player1","Player2","playerInfoLeftVariants","playerInfoRigthVariants","useAppSelector","selectGameMode","selectPlayer1","selectPlayer2","iconsPVP","player1","player2","iconsPVCPU","PlayerInfo","player","gameMode","p1","p2","PalyerIcon","name","score"],"sources":["C:/wamp64/www/gamereact11/src/components/game/playerInfo/PlayerInfo.tsx"],"sourcesContent":["import React from 'react';\n\nimport { PlayerInfoWrapper, PlayerName, Score } from './PlayerInfoStyles';\nimport { ReactComponent as YouIcon } from '../../../assets/images/you.svg';\nimport { ReactComponent as CPUIcon } from '../../../assets/images/cpu.svg';\nimport { ReactComponent as Player1 } from '../../../assets/images/player-one.svg';\nimport { ReactComponent as Player2 } from '../../../assets/images/player-two.svg';\nimport {\n  playerInfoLeftVariants,\n  playerInfoRigthVariants,\n} from '../../../frameMotinVariats/frameMotionVariants';\nimport { useAppSelector } from '../../../store/hooks';\nimport {\n  selectGameMode,\n  selectPlayer1,\n  selectPlayer2,\n} from '../../../store/gameSlice';\n\ntype icons = {\n  [key: string]: React.FunctionComponent;\n};\n\nconst iconsPVP: icons = {\n  player1: Player1,\n  player2: Player2,\n};\n\nconst iconsPVCPU: icons = {\n  player1: YouIcon,\n  player2: CPUIcon,\n};\n\nconst PlayerInfo: React.FC<{ player: string }> = ({ player }) => {\n  const gameMode = useAppSelector(selectGameMode);\n  const p1 = useAppSelector(selectPlayer1);\n  const p2 = useAppSelector(selectPlayer2);\n  // render needed svg base on player name and game mode\n  const PalyerIcon = gameMode === 'PvP' ? iconsPVP[player] : iconsPVCPU[player];\n\n  return (\n    <PlayerInfoWrapper\n      player={player}\n      // @ts-ignore\n      variants={\n        player === 'player1' ? playerInfoLeftVariants : playerInfoRigthVariants\n      }\n      initial=\"hidden\"\n      animate=\"visible\"\n      exit=\"exit\"\n    >\n      {/* depenends on if it player1 or player2 we render different data */}\n      <PlayerName>{player === 'player1' ? p1.name : p2.name}</PlayerName>\n\n      <Score data-testid={`${player}-score`}>\n        {player === 'player1' ? p1.score : p2.score}\n      </Score>\n      <PalyerIcon data-testid=\"icon\" />\n    </PlayerInfoWrapper>\n  );\n};\n\nexport default PlayerInfo;\n"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CAEzB,OAASC,iBAAiB,CAAEC,UAAU,CAAEC,KAAK,KAAQ,oBAAoB,CACzE,OAASC,cAAc,GAAIC,QAAO,KAAQ,gCAAgC,CAC1E,OAASD,cAAc,GAAIE,QAAO,KAAQ,gCAAgC,CAC1E,OAASF,cAAc,GAAIG,QAAO,KAAQ,uCAAuC,CACjF,OAASH,cAAc,GAAII,QAAO,KAAQ,uCAAuC,CACjF,OACEC,sBAAsB,CACtBC,uBAAuB,KAClB,gDAAgD,CACvD,OAASC,cAAc,KAAQ,sBAAsB,CACrD,OACEC,cAAc,CACdC,aAAa,CACbC,aAAa,KACR,0BAA0B,CAAC,wFAMlC,GAAMC,SAAe,CAAG,CACtBC,OAAO,CAAET,OAAO,CAChBU,OAAO,CAAET,OACX,CAAC,CAED,GAAMU,WAAiB,CAAG,CACxBF,OAAO,CAAEX,OAAO,CAChBY,OAAO,CAAEX,OACX,CAAC,CAED,GAAMa,WAAwC,CAAG,QAA3CA,WAAwC,MAAmB,IAAbC,OAAM,MAANA,MAAM,CACxD,GAAMC,SAAQ,CAAGV,cAAc,CAACC,cAAc,CAAC,CAC/C,GAAMU,GAAE,CAAGX,cAAc,CAACE,aAAa,CAAC,CACxC,GAAMU,GAAE,CAAGZ,cAAc,CAACG,aAAa,CAAC,CACxC;AACA,GAAMU,WAAU,CAAGH,QAAQ,GAAK,KAAK,CAAGN,QAAQ,CAACK,MAAM,CAAC,CAAGF,UAAU,CAACE,MAAM,CAAC,CAE7E,mBACE,MAAC,iBAAiB,EAChB,MAAM,CAAEA,MACR;AAAA,CACA,QAAQ,CACNA,MAAM,GAAK,SAAS,CAAGX,sBAAsB,CAAGC,uBACjD,CACD,OAAO,CAAC,QAAQ,CAChB,OAAO,CAAC,SAAS,CACjB,IAAI,CAAC,MAAM,wBAGX,KAAC,UAAU,WAAEU,MAAM,GAAK,SAAS,CAAGE,EAAE,CAACG,IAAI,CAAGF,EAAE,CAACE,IAAI,EAAc,cAEnE,KAAC,KAAK,EAAC,wBAAgBL,MAAM,UAAS,UACnCA,MAAM,GAAK,SAAS,CAAGE,EAAE,CAACI,KAAK,CAAGH,EAAE,CAACG,KAAK,EACrC,cACR,KAAC,UAAU,EAAC,cAAY,MAAM,EAAG,GACf,CAExB,CAAC,CAED,cAAeP,WAAU"},"metadata":{},"sourceType":"module"}