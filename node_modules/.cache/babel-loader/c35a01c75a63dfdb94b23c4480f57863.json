{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\gamereact11\\\\src\\\\components\\\\UI\\\\winner\\\\Winner.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { WinneroWrapper, WinnerName, WinnerText } from './WinnerStyles';\nimport { SmallButton } from '../smallButton/SmallButton';\nimport { useAppDispatch } from '../../../store/hooks';\nimport { playAgain } from '../../../store/gameSlice';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Winner = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const game = useSelector(state => state.game);\n\n  // if it is tie we render no name and status tie\n  // it there is a winner we render correct player name and status wins\n  let name = '';\n  let status = 'tie';\n  if (game.winner && game.winner !== 'tie') {\n    name = game[game.winner].name;\n    // check for gramma\n    status = name === 'You' ? 'win' : 'wins';\n  }\n\n  // Play again button handler\n  const playAgainHandler = () => {\n    dispatch(playAgain());\n  };\n  return /*#__PURE__*/_jsxDEV(WinneroWrapper, {\n    \"data-testid\": \"winner\",\n    children: [/*#__PURE__*/_jsxDEV(WinnerName, {\n      \"data-testid\": \"winner-name\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WinnerText, {\n      \"data-testid\": \"game-status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SmallButton, {\n      onClick: playAgainHandler,\n      children: \"Play Again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Winner, \"xvZSLqGYqIBU+PT0HabhwAtVgBw=\", false, function () {\n  return [useAppDispatch, useSelector];\n});\n_c = Winner;\nexport default Winner;\nvar _c;\n$RefreshReg$(_c, \"Winner\");","map":{"version":3,"names":["React","WinneroWrapper","WinnerName","WinnerText","SmallButton","useAppDispatch","playAgain","useSelector","Winner","dispatch","game","state","name","status","winner","playAgainHandler"],"sources":["C:/wamp64/www/gamereact11/src/components/UI/winner/Winner.tsx"],"sourcesContent":["import React from 'react';\n\nimport { WinneroWrapper, WinnerName, WinnerText } from './WinnerStyles';\nimport { SmallButton } from '../smallButton/SmallButton';\nimport { useAppDispatch } from '../../../store/hooks';\nimport { playAgain } from '../../../store/gameSlice';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../store/store';\n\nconst Winner: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const game = useSelector((state: RootState) => state.game);\n\n  // if it is tie we render no name and status tie\n  // it there is a winner we render correct player name and status wins\n  let name = '';\n  let status = 'tie';\n  if (game.winner && game.winner !== 'tie') {\n    name = game[game.winner].name;\n    // check for gramma\n    status = name === 'You' ? 'win' : 'wins';\n  }\n\n  // Play again button handler\n  const playAgainHandler = () => {\n    dispatch(playAgain());\n  };\n\n  return (\n    <WinneroWrapper data-testid=\"winner\">\n      <WinnerName data-testid=\"winner-name\">{name}</WinnerName>\n      <WinnerText data-testid=\"game-status\">{status}</WinnerText>\n      <SmallButton onClick={playAgainHandler}>Play Again</SmallButton>\n    </WinneroWrapper>\n  );\n};\n\nexport default Winner;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,cAAc,EAAEC,UAAU,EAAEC,UAAU,QAAQ,gBAAgB;AACvE,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,WAAW,QAAQ,aAAa;AAAC;AAG1C,MAAMC,MAAgB,GAAG,MAAM;EAAA;EAC7B,MAAMC,QAAQ,GAAGJ,cAAc,EAAE;EACjC,MAAMK,IAAI,GAAGH,WAAW,CAAEI,KAAgB,IAAKA,KAAK,CAACD,IAAI,CAAC;;EAE1D;EACA;EACA,IAAIE,IAAI,GAAG,EAAE;EACb,IAAIC,MAAM,GAAG,KAAK;EAClB,IAAIH,IAAI,CAACI,MAAM,IAAIJ,IAAI,CAACI,MAAM,KAAK,KAAK,EAAE;IACxCF,IAAI,GAAGF,IAAI,CAACA,IAAI,CAACI,MAAM,CAAC,CAACF,IAAI;IAC7B;IACAC,MAAM,GAAGD,IAAI,KAAK,KAAK,GAAG,KAAK,GAAG,MAAM;EAC1C;;EAEA;EACA,MAAMG,gBAAgB,GAAG,MAAM;IAC7BN,QAAQ,CAACH,SAAS,EAAE,CAAC;EACvB,CAAC;EAED,oBACE,QAAC,cAAc;IAAC,eAAY,QAAQ;IAAA,wBAClC,QAAC,UAAU;MAAC,eAAY,aAAa;MAAA,UAAEM;IAAI;MAAA;MAAA;MAAA;IAAA,QAAc,eACzD,QAAC,UAAU;MAAC,eAAY,aAAa;MAAA,UAAEC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAc,eAC3D,QAAC,WAAW;MAAC,OAAO,EAAEE,gBAAiB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAyB;EAAA;IAAA;IAAA;IAAA;EAAA,QACjD;AAErB,CAAC;AAAC,GA1BIP,MAAgB;EAAA,QACHH,cAAc,EAClBE,WAAW;AAAA;AAAA,KAFpBC,MAAgB;AA4BtB,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module"}