{"ast":null,"code":"import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { modalReducer } from './modalSlice';\nimport { gameReducer } from './gameSlice';\nconst rootReducer = combineReducers({\n  modal: modalReducer,\n  game: gameReducer\n});\nexport function setupStore(preloadedState) {\n  return configureStore({\n    reducer: rootReducer,\n    preloadedState\n  });\n}\n\n//MIDDLEWARE\nconst localStorageMiddleware = _ref => {\n  let {\n    getState\n  } = _ref;\n  return next => action => {\n    const result = next(action);\n    localStorage.setItem('connectFourGameSettigns', JSON.stringify(getState()));\n    return result;\n  };\n};\n\n// Rehydration function\n\nconst reHydrateStore = () => {\n  if (localStorage.getItem('connectFourGameSettigns') !== null) {\n    return JSON.parse(localStorage.getItem('connectFourGameSettigns')); // re-hydrate the store\n  }\n};\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  preloadedState: reHydrateStore(),\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(localStorageMiddleware)\n});","map":{"version":3,"names":["combineReducers","configureStore","modalReducer","gameReducer","rootReducer","modal","game","setupStore","preloadedState","reducer","localStorageMiddleware","getState","next","action","result","localStorage","setItem","JSON","stringify","reHydrateStore","getItem","parse","store","middleware","getDefaultMiddleware","concat"],"sources":["C:/wamp64/www/gamereact11/src/store/store.ts"],"sourcesContent":["import {\n  combineReducers,\n  configureStore,\n  Middleware,\n  PreloadedState,\n} from '@reduxjs/toolkit';\nimport { modalReducer } from './modalSlice';\nimport { gameReducer } from './gameSlice';\n\nconst rootReducer = combineReducers({\n  modal: modalReducer,\n  game: gameReducer,\n});\n\nexport function setupStore(preloadedState?: PreloadedState<RootState>) {\n  return configureStore({\n    reducer: rootReducer,\n    preloadedState,\n  });\n}\n\n//MIDDLEWARE\nconst localStorageMiddleware: Middleware = ({ getState }) => {\n  return (next) => (action) => {\n    const result = next(action);\n    localStorage.setItem('connectFourGameSettigns', JSON.stringify(getState()));\n    return result;\n  };\n};\n\n// Rehydration function\n\nconst reHydrateStore = () => {\n  if (localStorage.getItem('connectFourGameSettigns') !== null) {\n    return JSON.parse(localStorage.getItem('connectFourGameSettigns')!); // re-hydrate the store\n  }\n};\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  preloadedState: reHydrateStore(),\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(localStorageMiddleware),\n});\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof rootReducer>;\nexport type AppStore = ReturnType<typeof setupStore>;\n"],"mappings":"AAAA,SACEA,eAAe,EACfC,cAAc,QAGT,kBAAkB;AACzB,SAASC,YAAY,QAAQ,cAAc;AAC3C,SAASC,WAAW,QAAQ,aAAa;AAEzC,MAAMC,WAAW,GAAGJ,eAAe,CAAC;EAClCK,KAAK,EAAEH,YAAY;EACnBI,IAAI,EAAEH;AACR,CAAC,CAAC;AAEF,OAAO,SAASI,UAAU,CAACC,cAA0C,EAAE;EACrE,OAAOP,cAAc,CAAC;IACpBQ,OAAO,EAAEL,WAAW;IACpBI;EACF,CAAC,CAAC;AACJ;;AAEA;AACA,MAAME,sBAAkC,GAAG,QAAkB;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACtD,OAAQC,IAAI,IAAMC,MAAM,IAAK;IAC3B,MAAMC,MAAM,GAAGF,IAAI,CAACC,MAAM,CAAC;IAC3BE,YAAY,CAACC,OAAO,CAAC,yBAAyB,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,EAAE,CAAC,CAAC;IAC3E,OAAOG,MAAM;EACf,CAAC;AACH,CAAC;;AAED;;AAEA,MAAMK,cAAc,GAAG,MAAM;EAC3B,IAAIJ,YAAY,CAACK,OAAO,CAAC,yBAAyB,CAAC,KAAK,IAAI,EAAE;IAC5D,OAAOH,IAAI,CAACI,KAAK,CAACN,YAAY,CAACK,OAAO,CAAC,yBAAyB,CAAC,CAAE,CAAC,CAAC;EACvE;AACF,CAAC;;AAED,OAAO,MAAME,KAAK,GAAGrB,cAAc,CAAC;EAClCQ,OAAO,EAAEL,WAAW;EACpBI,cAAc,EAAEW,cAAc,EAAE;EAChCI,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,EAAE,CAACC,MAAM,CAACf,sBAAsB;AACxD,CAAC,CAAC"},"metadata":{},"sourceType":"module"}