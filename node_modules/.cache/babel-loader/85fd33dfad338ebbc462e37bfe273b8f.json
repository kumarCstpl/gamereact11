{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\gamereact11\\\\src\\\\components\\\\game\\\\controlGrid\\\\ControlGrid.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Control, Column } from './ControlGridStlyes';\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks';\nimport { makeMove, selectCurrentPlayer, selectGameMode, selectIsTimeForNextTurn, setPointercolumn } from '../../../store/gameSlice';\nimport { aiMove } from '../../../store/aiMove';\nimport GamePointer from '../../UI/pointer/Pointer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = Array(7).fill(null);\nconst ControlGrid = () => {\n  _s();\n  const isTimeForNextTurn = useAppSelector(selectIsTimeForNextTurn);\n  const gameMode = useAppSelector(selectGameMode);\n  const currentPlayer = useAppSelector(selectCurrentPlayer);\n  const dispatch = useAppDispatch();\n  // CPU move monitoring\n  useEffect(() => {\n    if (currentPlayer === 'p2' && gameMode === 'CPUvP' && isTimeForNextTurn) {\n      dispatch(aiMove());\n    }\n  }, [dispatch, isTimeForNextTurn, currentPlayer, gameMode]);\n\n  // Moving pointer\n  const mouseHoverHandler = e => {\n    dispatch(setPointercolumn(e.currentTarget.getAttribute('data-columnnum') || '0'));\n  };\n\n  // Player move handler\n  const columnClickHandler = e => {\n    e.stopPropagation();\n    if (currentPlayer === 'p2' && gameMode === 'CPUvP') return;\n    const col = e.currentTarget.getAttribute('data-columnnum');\n    if (col) {\n      dispatch(makeMove(+col));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Control, {\n    \"data-testid\": \"control\",\n    children: [/*#__PURE__*/_jsxDEV(GamePointer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), columns.map((_, ind) => {\n      return /*#__PURE__*/_jsxDEV(Column, {\n        \"data-columnnum\": ind,\n        onMouseEnter: mouseHoverHandler,\n        onClick: columnClickHandler,\n        \"data-testid\": `column${ind}`\n      }, ind, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(ControlGrid, \"QReXVXuH0iFGpvOKWtcH9etr+SQ=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector, useAppDispatch];\n});\n_c = ControlGrid;\nexport default ControlGrid;\nvar _c;\n$RefreshReg$(_c, \"ControlGrid\");","map":{"version":3,"names":["React","useEffect","Control","Column","useAppDispatch","useAppSelector","makeMove","selectCurrentPlayer","selectGameMode","selectIsTimeForNextTurn","setPointercolumn","aiMove","GamePointer","columns","Array","fill","ControlGrid","isTimeForNextTurn","gameMode","currentPlayer","dispatch","mouseHoverHandler","e","currentTarget","getAttribute","columnClickHandler","stopPropagation","col","map","_","ind"],"sources":["C:/wamp64/www/gamereact11/src/components/game/controlGrid/ControlGrid.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\n\nimport { Control, Column } from './ControlGridStlyes';\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks';\nimport {\n  makeMove,\n  selectCurrentPlayer,\n  selectGameMode,\n  selectIsTimeForNextTurn,\n  setPointercolumn,\n} from '../../../store/gameSlice';\n\nimport { aiMove } from '../../../store/aiMove';\nimport GamePointer from '../../UI/pointer/Pointer';\n\nconst columns = Array(7).fill(null);\n\nconst ControlGrid: React.FC = () => {\n  const isTimeForNextTurn = useAppSelector(selectIsTimeForNextTurn);\n  const gameMode = useAppSelector(selectGameMode);\n  const currentPlayer = useAppSelector(selectCurrentPlayer);\n\n  const dispatch = useAppDispatch();\n  // CPU move monitoring\n  useEffect(() => {\n    if (currentPlayer === 'p2' && gameMode === 'CPUvP' && isTimeForNextTurn) {\n      dispatch(aiMove());\n    }\n  }, [dispatch, isTimeForNextTurn, currentPlayer, gameMode]);\n\n  // Moving pointer\n  const mouseHoverHandler = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    dispatch(\n      setPointercolumn(e.currentTarget.getAttribute('data-columnnum') || '0')\n    );\n  };\n\n  // Player move handler\n  const columnClickHandler = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    e.stopPropagation();\n    if (currentPlayer === 'p2' && gameMode === 'CPUvP') return;\n    const col = e.currentTarget.getAttribute('data-columnnum');\n    if (col) {\n      dispatch(makeMove(+col));\n    }\n  };\n\n  return (\n    <Control data-testid=\"control\">\n      <GamePointer />\n      {columns.map((_, ind) => {\n        return (\n          <Column\n            key={ind}\n            data-columnnum={ind}\n            onMouseEnter={mouseHoverHandler}\n            onClick={columnClickHandler}\n            data-testid={`column${ind}`}\n          />\n        );\n      })}\n    </Control>\n  );\n};\n\nexport default ControlGrid;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,SAASC,OAAO,EAAEC,MAAM,QAAQ,qBAAqB;AACrD,SAASC,cAAc,EAAEC,cAAc,QAAQ,sBAAsB;AACrE,SACEC,QAAQ,EACRC,mBAAmB,EACnBC,cAAc,EACdC,uBAAuB,EACvBC,gBAAgB,QACX,0BAA0B;AAEjC,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,OAAOC,WAAW,MAAM,0BAA0B;AAAC;AAEnD,MAAMC,OAAO,GAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;AAEnC,MAAMC,WAAqB,GAAG,MAAM;EAAA;EAClC,MAAMC,iBAAiB,GAAGZ,cAAc,CAACI,uBAAuB,CAAC;EACjE,MAAMS,QAAQ,GAAGb,cAAc,CAACG,cAAc,CAAC;EAC/C,MAAMW,aAAa,GAAGd,cAAc,CAACE,mBAAmB,CAAC;EAEzD,MAAMa,QAAQ,GAAGhB,cAAc,EAAE;EACjC;EACAH,SAAS,CAAC,MAAM;IACd,IAAIkB,aAAa,KAAK,IAAI,IAAID,QAAQ,KAAK,OAAO,IAAID,iBAAiB,EAAE;MACvEG,QAAQ,CAACT,MAAM,EAAE,CAAC;IACpB;EACF,CAAC,EAAE,CAACS,QAAQ,EAAEH,iBAAiB,EAAEE,aAAa,EAAED,QAAQ,CAAC,CAAC;;EAE1D;EACA,MAAMG,iBAAiB,GACrBC,CAA+C,IAC5C;IACHF,QAAQ,CACNV,gBAAgB,CAACY,CAAC,CAACC,aAAa,CAACC,YAAY,CAAC,gBAAgB,CAAC,IAAI,GAAG,CAAC,CACxE;EACH,CAAC;;EAED;EACA,MAAMC,kBAAkB,GACtBH,CAA+C,IAC5C;IACHA,CAAC,CAACI,eAAe,EAAE;IACnB,IAAIP,aAAa,KAAK,IAAI,IAAID,QAAQ,KAAK,OAAO,EAAE;IACpD,MAAMS,GAAG,GAAGL,CAAC,CAACC,aAAa,CAACC,YAAY,CAAC,gBAAgB,CAAC;IAC1D,IAAIG,GAAG,EAAE;MACPP,QAAQ,CAACd,QAAQ,CAAC,CAACqB,GAAG,CAAC,CAAC;IAC1B;EACF,CAAC;EAED,oBACE,QAAC,OAAO;IAAC,eAAY,SAAS;IAAA,wBAC5B,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAG,EACdd,OAAO,CAACe,GAAG,CAAC,CAACC,CAAC,EAAEC,GAAG,KAAK;MACvB,oBACE,QAAC,MAAM;QAEL,kBAAgBA,GAAI;QACpB,YAAY,EAAET,iBAAkB;QAChC,OAAO,EAAEI,kBAAmB;QAC5B,eAAc,SAAQK,GAAI;MAAE,GAJvBA,GAAG;QAAA;QAAA;QAAA;MAAA,QAKR;IAEN,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACM;AAEd,CAAC;AAAC,GAlDId,WAAqB;EAAA,QACCX,cAAc,EACvBA,cAAc,EACTA,cAAc,EAEnBD,cAAc;AAAA;AAAA,KAL3BY,WAAqB;AAoD3B,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}