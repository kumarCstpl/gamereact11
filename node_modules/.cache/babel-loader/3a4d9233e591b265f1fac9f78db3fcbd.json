{"ast":null,"code":"import React,{useEffect}from'react';import{TimerWrapper,PlayerName,Time}from'./TimerStlyes';import TurnRed from'../../../assets/images/turn-background-red.svg';import TurnYellow from'../../../assets/images/turn-background-yellow.svg';import{useAppSelector,useAppDispatch}from'../../../store/hooks';import{useSelector}from'react-redux';import{selectTurn,selectTimer,selectCurrentPlayer,selectIsGamePaused,updateTimer,changeTurn}from'../../../store/gameSlice';import{jsxs as _jsxs}from\"react/jsx-runtime\";var bgs={red:TurnRed,yellow:TurnYellow};var textColor={red:'var(--color-white)',yellow:'var(--color-black)'};var Timer=function Timer(){var game=useSelector(function(state){return state.game;});var turn=useAppSelector(selectTurn);var timer=useAppSelector(selectTimer);var isGamePaused=useAppSelector(selectIsGamePaused);var currentPlayer=useAppSelector(selectCurrentPlayer);var dispatch=useAppDispatch();var player=game[currentPlayer].name==='You'?'your':\"\".concat(game[currentPlayer].name,\"'s\");// keep tracking of current timer, not the best one but for 30s interval is enough\nuseEffect(function(){if(isGamePaused)return;var timeout=setTimeout(function(){var newTime=timer-1;dispatch(updateTimer(newTime));},1000);if(timer<=0){dispatch(changeTurn());}return function(){clearTimeout(timeout);};},[dispatch,timer,isGamePaused]);return/*#__PURE__*/_jsxs(TimerWrapper,{bg:bgs[turn],textcolor:textColor[turn],\"data-testid\":\"timer\",children:[/*#__PURE__*/_jsxs(PlayerName,{children:[player,\" turn\"]}),/*#__PURE__*/_jsxs(Time,{children:[timer,\"s\"]})]});};export default Timer;","map":{"version":3,"names":["React","useEffect","TimerWrapper","PlayerName","Time","TurnRed","TurnYellow","useAppSelector","useAppDispatch","useSelector","selectTurn","selectTimer","selectCurrentPlayer","selectIsGamePaused","updateTimer","changeTurn","bgs","red","yellow","textColor","Timer","game","state","turn","timer","isGamePaused","currentPlayer","dispatch","player","name","timeout","setTimeout","newTime","clearTimeout"],"sources":["C:/wamp64/www/gamereact11/src/components/UI/timer/Timer.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\n\nimport { TimerWrapper, PlayerName, Time } from './TimerStlyes';\n\nimport TurnRed from '../../../assets/images/turn-background-red.svg';\nimport TurnYellow from '../../../assets/images/turn-background-yellow.svg';\nimport { useAppSelector, useAppDispatch } from '../../../store/hooks';\nimport { RootState } from '../../../store/store';\nimport { useSelector } from 'react-redux';\nimport {\n  selectTurn,\n  selectTimer,\n  selectCurrentPlayer,\n  selectIsGamePaused,\n  updateTimer,\n  changeTurn,\n} from '../../../store/gameSlice';\n\nconst bgs: { [key: string]: string } = {\n  red: TurnRed,\n  yellow: TurnYellow,\n};\n\nconst textColor: { [key: string]: string } = {\n  red: 'var(--color-white)',\n  yellow: 'var(--color-black)',\n};\n\nconst Timer: React.FC = () => {\n  const game = useSelector((state: RootState) => state.game);\n  const turn = useAppSelector(selectTurn);\n  const timer = useAppSelector(selectTimer);\n  const isGamePaused = useAppSelector(selectIsGamePaused);\n  const currentPlayer = useAppSelector(selectCurrentPlayer);\n\n  const dispatch = useAppDispatch();\n\n  const player =\n    game[currentPlayer].name === 'You'\n      ? 'your'\n      : `${game[currentPlayer].name}'s`;\n\n  // keep tracking of current timer, not the best one but for 30s interval is enough\n  useEffect(() => {\n    if (isGamePaused) return;\n    const timeout = setTimeout(function () {\n      const newTime = timer - 1;\n      dispatch(updateTimer(newTime));\n    }, 1000);\n\n    if (timer <= 0) {\n      dispatch(changeTurn());\n    }\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [dispatch, timer, isGamePaused]);\n\n  return (\n    <TimerWrapper\n      bg={bgs[turn]}\n      textcolor={textColor[turn]}\n      data-testid=\"timer\"\n    >\n      <PlayerName>{player} turn</PlayerName>\n      <Time>{timer}s</Time>\n    </TimerWrapper>\n  );\n};\n\nexport default Timer;\n"],"mappings":"AAAA,MAAOA,MAAK,EAAIC,SAAS,KAAQ,OAAO,CAExC,OAASC,YAAY,CAAEC,UAAU,CAAEC,IAAI,KAAQ,eAAe,CAE9D,MAAOC,QAAO,KAAM,gDAAgD,CACpE,MAAOC,WAAU,KAAM,mDAAmD,CAC1E,OAASC,cAAc,CAAEC,cAAc,KAAQ,sBAAsB,CAErE,OAASC,WAAW,KAAQ,aAAa,CACzC,OACEC,UAAU,CACVC,WAAW,CACXC,mBAAmB,CACnBC,kBAAkB,CAClBC,WAAW,CACXC,UAAU,KACL,0BAA0B,CAAC,6CAElC,GAAMC,IAA8B,CAAG,CACrCC,GAAG,CAAEZ,OAAO,CACZa,MAAM,CAAEZ,UACV,CAAC,CAED,GAAMa,UAAoC,CAAG,CAC3CF,GAAG,CAAE,oBAAoB,CACzBC,MAAM,CAAE,oBACV,CAAC,CAED,GAAME,MAAe,CAAG,QAAlBA,MAAe,EAAS,CAC5B,GAAMC,KAAI,CAAGZ,WAAW,CAAC,SAACa,KAAgB,QAAKA,MAAK,CAACD,IAAI,GAAC,CAC1D,GAAME,KAAI,CAAGhB,cAAc,CAACG,UAAU,CAAC,CACvC,GAAMc,MAAK,CAAGjB,cAAc,CAACI,WAAW,CAAC,CACzC,GAAMc,aAAY,CAAGlB,cAAc,CAACM,kBAAkB,CAAC,CACvD,GAAMa,cAAa,CAAGnB,cAAc,CAACK,mBAAmB,CAAC,CAEzD,GAAMe,SAAQ,CAAGnB,cAAc,EAAE,CAEjC,GAAMoB,OAAM,CACVP,IAAI,CAACK,aAAa,CAAC,CAACG,IAAI,GAAK,KAAK,CAC9B,MAAM,WACHR,IAAI,CAACK,aAAa,CAAC,CAACG,IAAI,MAAI,CAErC;AACA5B,SAAS,CAAC,UAAM,CACd,GAAIwB,YAAY,CAAE,OAClB,GAAMK,QAAO,CAAGC,UAAU,CAAC,UAAY,CACrC,GAAMC,QAAO,CAAGR,KAAK,CAAG,CAAC,CACzBG,QAAQ,CAACb,WAAW,CAACkB,OAAO,CAAC,CAAC,CAChC,CAAC,CAAE,IAAI,CAAC,CAER,GAAIR,KAAK,EAAI,CAAC,CAAE,CACdG,QAAQ,CAACZ,UAAU,EAAE,CAAC,CACxB,CACA,MAAO,WAAM,CACXkB,YAAY,CAACH,OAAO,CAAC,CACvB,CAAC,CACH,CAAC,CAAE,CAACH,QAAQ,CAAEH,KAAK,CAAEC,YAAY,CAAC,CAAC,CAEnC,mBACE,MAAC,YAAY,EACX,EAAE,CAAET,GAAG,CAACO,IAAI,CAAE,CACd,SAAS,CAAEJ,SAAS,CAACI,IAAI,CAAE,CAC3B,cAAY,OAAO,wBAEnB,MAAC,UAAU,YAAEK,MAAM,WAAmB,cACtC,MAAC,IAAI,YAAEJ,KAAK,OAAS,GACR,CAEnB,CAAC,CAED,cAAeJ,MAAK"},"metadata":{},"sourceType":"module"}